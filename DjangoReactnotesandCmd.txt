https://www.youtube.com/watch?v=PD3YnPSHC-c
https://www.youtube.com/watch?v=f5ygXQKF6M8
https://djangobook.com/mdj2-advanced-models/
https://www.codegrepper.com/code-examples/python/order_by+django

#Supported versions.
Django   Python
version	 versions
2.2	3.5, 3.6, 3.7, 3.8 (added in 2.2.8), 3.9 (added in 2.2.17)
3.0	3.6, 3.7, 3.8, 3.9 (added in 3.0.11)
3.1	3.6, 3.7, 3.8, 3.9 (added in 3.1.3)
3.2	3.6, 3.7, 3.8, 3.9, 3.10 (added in 3.2.9)

#Supported versions for Django  Restframework. 
Our supported Python versions are now: 3.5, 3.6, 3.7, and 3.8.
Our supported Django versions are now: 1.11, 2.0, 2.1, 2.2, and 3.0.

#Check version Command

python --version
pip --version
node -v
npm -v
django-admin --version


install django in virtual environment
python -m venv EnvName
EnvName\Scripts\activate
pip install Django==3.0.8  //// ( 3.2 v)
pip install djangorestframework
pip install mysqlclient pymysql/////pip install pymysql
pip install django-cors-headers
pip install django-user-activity-log

========================================================
mysql user creation on server

Open file

su         
nano /etc/sudoers
Then add the user below admin user like below syntax.

user_name ALL=(ALL)  ALL

-----------------------------------------------------------------
sudo yum install mysql-server    \\\install mysqlclient

sudo service mysqld start

sudo mysql –u root –p

sudo service mysqld Status






========================================================








pip install PyJWT==1.7.1       //Error :--attributeerror 'str' object has no attribute 'decode' django jwt      
#Enable CORS -cross origin resource sharing,install cors headers in djangoProject.

#pip install django-mssql-backend

#py -m pip install django mssql-django
#pip install django-rest-authemail

#Create DjangoProject 
django-admin startproject  PROJECTNAME
python manage.py runserver
code .    #Open code in vscode

#Create DjangoApp 
python manage.py startapp APPNAME
 

#Setting.py 

we need to register our app,restframwork,cors headers in Installed_apps.
also define corsheaders in middleware.

CORS_ORIGIN_ALLOW_ALL = True #we allow the all domain to access through API

CORS_ALLOWED_ORIGINS = [ "https://example.com","https://localhost.3000",]
INSTALLED_APPS =[
    'corsheaders',
    'rest_framework',
    'Appname.apps.
]

MIDDLEWARE =[
'corsheaders.middleware.CorsMiddleware',
]

python manage.py makemigrations
python manage.py migrate

#Download 
ODBC Driver 17 for MSSql server.

#MSSQL
set TCP Port 1433


#Auto-generate the models¶
Django comes with a utility called inspectdb that can create models by introspecting an existing database. 
You can view the output by running this command:

#DataBase Connectivity
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'erpAppdb',
        'USER': 'root',
        'PASSWORD': 'MYSQL123',
        'HOST': 'localhost',
        'PORT': '3306'
    }
}

# Error 
MyEnv\Scripts\Activate : File D:\rohini\ERPProject\MyEnv\Scripts\Activate.ps1 cannot be
loaded because running scripts is disabled on this system. For more information, see
about_Execution_Policies at https:/go.microsoft.com/fwlink/?LinkID=135170.
At line:1 char:1
+ MyEnv\Scripts\Activate
+ ~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : SecurityError: (:) [], PSSecurityException
    + FullyQualifiedErrorId : UnauthorizedAccess

Ans:Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser


========================JWT Token=====================

https://medium.com/analytics-vidhya/django-rest-api-with-json-web-token-jwt-authentication-69536c01ee18
____________________________________________________________________________________________________________

#pip install djangorestframework-jwt

pip install drf-jwt **

setting.py

AUTH_USER_MODEL = 'user.User' 
REST_FRAMEWORK = {
     'DEFAULT_PERMISSION_CLASSES': [
         'rest_framework.permissions.IsAuthenticated',
         'rest_framework.permissions.IsAdminUser',
         ],
    'DEFAULT_AUTHENTICATION_CLASSES': (
     'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
     )
}

# Jwt Authentication

JWT_AUTH = {
    'JWT_ENCODE_HANDLER':
    'rest_framework_jwt.utils.jwt_encode_handler',

    'JWT_DECODE_HANDLER':
    'rest_framework_jwt.utils.jwt_decode_handler',

    'JWT_PAYLOAD_HANDLER':
    'rest_framework_jwt.utils.jwt_payload_handler',

    'JWT_PAYLOAD_GET_USER_ID_HANDLER':
    'rest_framework_jwt.utils.jwt_get_user_id_from_payload_handler',

    'JWT_RESPONSE_PAYLOAD_HANDLER':
    'rest_framework_jwt.utils.jwt_response_payload_handler',

    'JWT_SECRET_KEY': 'SECRET_KEY',
    'JWT_GET_USER_SECRET_KEY': None,
    'JWT_PUBLIC_KEY': None,
    'JWT_PRIVATE_KEY': None,
    'JWT_ALGORITHM': 'HS256',
    'JWT_VERIFY': True,
    'JWT_VERIFY_EXPIRATION': True,
    'JWT_LEEWAY': 0,
    'JWT_EXPIRATION_DELTA': timedelta(days=30),
    'JWT_AUDIENCE': None,
    'JWT_ISSUER': None,

    'JWT_ALLOW_REFRESH': False,
    'JWT_REFRESH_EXPIRATION_DELTA': timedelta(days=30),

    'JWT_AUTH_HEADER_PREFIX': 'Bearer',
    'JWT_AUTH_COOKIE': None,
}