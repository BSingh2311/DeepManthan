# Generated by Django 3.0.8 on 2022-11-01 11:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Abc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='')),
                ('remark', models.CharField(max_length=20)),
                ('picture', models.ImageField(blank=True, upload_to='ItemMaster')),
            ],
            options={
                'db_table': 'Abc',
            },
        ),
        migrations.CreateModel(
            name='C_Companies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100)),
                ('Address', models.CharField(blank=True, max_length=100, null=True)),
                ('GSTIN', models.CharField(max_length=100)),
                ('PhoneNo', models.CharField(blank=True, max_length=100, null=True)),
                ('CompanyAbbreviation', models.CharField(max_length=100)),
                ('EmailID', models.CharField(blank=True, max_length=100, null=True)),
                ('IsSCM', models.BooleanField(default=False)),
                ('CreatedBy', models.IntegerField()),
                ('CreatedOn', models.DateTimeField(auto_now_add=True)),
                ('UpdatedBy', models.IntegerField()),
                ('UpdatedOn', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'C_Companies',
            },
        ),
        migrations.CreateModel(
            name='C_CompanyGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100)),
                ('IsSCM', models.BooleanField(default=False)),
                ('CreatedBy', models.IntegerField()),
                ('CreatedOn', models.DateTimeField(auto_now_add=True)),
                ('UpdatedBy', models.IntegerField()),
                ('UpdatedOn', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'C_CompanyGroups',
            },
        ),
        migrations.CreateModel(
            name='H_Modules',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100)),
                ('DisplayIndex', models.IntegerField()),
                ('isActive', models.BooleanField(default=False)),
                ('Icon', models.CharField(max_length=100)),
                ('CreatedBy', models.IntegerField(blank=True, null=True)),
                ('CreatedOn', models.DateTimeField(auto_now_add=True)),
                ('UpdatedBy', models.IntegerField(blank=True, null=True)),
                ('UpdatedOn', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'H_Modules',
            },
        ),
        migrations.CreateModel(
            name='H_PageAccess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100)),
                ('CreatedBy', models.IntegerField()),
                ('CreatedOn', models.DateTimeField(auto_now_add=True)),
                ('UpdatedBy', models.IntegerField()),
                ('UpdatedOn', models.DateTimeField(auto_now=True)),
                ('Sequence', models.IntegerField()),
            ],
            options={
                'db_table': 'H_PageAccess',
            },
        ),
        migrations.CreateModel(
            name='M_AddressTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'M_AddressTypes',
            },
        ),
        migrations.CreateModel(
            name='M_Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=500)),
                ('CreatedBy', models.IntegerField(default=False)),
                ('CreatedOn', models.DateTimeField(auto_now_add=True)),
                ('UpdatedBy', models.IntegerField(default=False)),
                ('UpdatedOn', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'M_Category',
            },
        ),
        migrations.CreateModel(
            name='M_CategoryType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=500)),
                ('CreatedBy', models.IntegerField(default=False)),
                ('CreatedOn', models.DateTimeField(auto_now_add=True)),
                ('UpdatedBy', models.IntegerField(default=False)),
                ('UpdatedOn', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'M_CategoryType',
            },
        ),
        migrations.CreateModel(
            name='M_ControlTypeMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=300)),
            ],
            options={
                'db_table': 'M_ControlTypeMaster',
            },
        ),
        migrations.CreateModel(
            name='M_Designations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100)),
                ('CreatedBy', models.IntegerField()),
                ('CreatedOn', models.DateTimeField(auto_now_add=True)),
                ('UpdatedBy', models.IntegerField()),
                ('UpdatedOn', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'M_Designations',
            },
        ),
        migrations.CreateModel(
            name='M_Districts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100)),
                ('CreatedBy', models.IntegerField()),
                ('CreatedOn', models.DateTimeField(auto_now_add=True)),
                ('UpdatedBy', models.IntegerField()),
                ('UpdatedOn', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'M_Districts',
            },
        ),
        migrations.CreateModel(
            name='M_Drivers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=300)),
                ('DOB', models.DateField()),
                ('Address', models.CharField(max_length=500)),
                ('UID', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'M_Drivers',
            },
        ),
        migrations.CreateModel(
            name='M_Employees',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100)),
                ('Address', models.CharField(max_length=500)),
                ('Mobile', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=255)),
                ('DOB', models.CharField(max_length=100)),
                ('PAN', models.CharField(max_length=100)),
                ('AadharNo', models.CharField(max_length=100)),
                ('working_hours', models.DecimalField(decimal_places=2, max_digits=15)),
                ('CreatedBy', models.IntegerField()),
                ('CreatedOn', models.DateTimeField(auto_now_add=True)),
                ('UpdatedBy', models.IntegerField()),
                ('UpdatedOn', models.DateTimeField(auto_now=True)),
                ('Company', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='EmployeesCompany', to='FoodERPApp.C_Companies')),
                ('Designation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='EmployeesDesignation', to='FoodERPApp.M_Designations')),
                ('District', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='EmployeesDistrict', to='FoodERPApp.M_Districts')),
            ],
            options={
                'db_table': 'M_Employees',
            },
        ),
        migrations.CreateModel(
            name='M_EmployeeTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100)),
                ('IsPartyConnection', models.BooleanField(default=False)),
                ('IsSCM', models.BooleanField(default=False)),
                ('Description', models.CharField(blank=True, max_length=100, null=True)),
                ('CreatedBy', models.IntegerField()),
                ('CreatedOn', models.DateTimeField(auto_now_add=True)),
                ('UpdatedBy', models.IntegerField()),
                ('UpdatedOn', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'M_EmployeeTypes',
            },
        ),
        migrations.CreateModel(
            name='M_FieldValidations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=300)),
                ('RegularExpression', models.CharField(max_length=300)),
                ('ControlType', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='FieldControlType', to='FoodERPApp.M_ControlTypeMaster')),
            ],
            options={
                'db_table': 'M_FieldValidations',
            },
        ),
        migrations.CreateModel(
            name='M_Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=500)),
                ('CreatedBy', models.IntegerField(default=False)),
                ('CreatedOn', models.DateTimeField(auto_now_add=True)),
                ('UpdatedBy', models.IntegerField(default=False)),
                ('UpdatedOn', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'M_Group',
            },
        ),
        migrations.CreateModel(
            name='M_GroupType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=500)),
                ('CreatedBy', models.IntegerField(default=False)),
                ('CreatedOn', models.DateTimeField(auto_now_add=True)),
                ('UpdatedBy', models.IntegerField(default=False)),
                ('UpdatedOn', models.DateTimeField(auto_now_add=True)),
                ('IsReserved', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'M_GroupType',
            },
        ),
        migrations.CreateModel(
            name='M_GSTHSNCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('EffectiveDate', models.DateField()),
                ('GSTPercentage', models.DecimalField(decimal_places=2, max_digits=10)),
                ('HSNCode', models.CharField(max_length=500)),
                ('CommonID', models.IntegerField(blank=True, null=True)),
                ('IsDeleted', models.BooleanField(default=False)),
                ('CreatedBy', models.IntegerField()),
                ('CreatedOn', models.DateTimeField(auto_now_add=True)),
                ('UpdatedBy', models.IntegerField()),
                ('UpdatedOn', models.DateTimeField(auto_now_add=True)),
                ('Company', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='GstCompany', to='FoodERPApp.C_Companies')),
            ],
            options={
                'db_table': 'M_GSTHSNCode',
            },
        ),
        migrations.CreateModel(
            name='M_ImageTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=500)),
                ('CreatedBy', models.IntegerField(default=False)),
                ('CreatedOn', models.DateTimeField(auto_now_add=True)),
                ('UpdatedBy', models.IntegerField(default=False)),
                ('UpdatedOn', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'M_ImageTypes',
            },
        ),
        migrations.CreateModel(
            name='M_Items',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=500)),
                ('ShortName', models.CharField(max_length=500)),
                ('Sequence', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('BarCode', models.CharField(blank=True, max_length=500, null=True)),
                ('isActive', models.BooleanField(default=False)),
                ('CreatedBy', models.IntegerField(default=False)),
                ('CreatedOn', models.DateTimeField(auto_now_add=True)),
                ('UpdatedBy', models.IntegerField(default=False)),
                ('UpdatedOn', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'M_Items',
            },
        ),
        migrations.CreateModel(
            name='M_ItemShelfLife',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=500)),
                ('Days', models.IntegerField(default=False)),
            ],
            options={
                'db_table': 'M_ItemShelfLife',
            },
        ),
        migrations.CreateModel(
            name='M_MarginMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CommonID', models.IntegerField(blank=True, null=True)),
                ('EffectiveDate', models.DateField()),
                ('Margin', models.DecimalField(decimal_places=2, max_digits=20)),
                ('IsDeleted', models.BooleanField(default=False)),
                ('CreatedBy', models.IntegerField()),
                ('CreatedOn', models.DateTimeField(auto_now_add=True)),
                ('UpdatedBy', models.IntegerField()),
                ('UpdatedOn', models.DateTimeField(auto_now_add=True)),
                ('Company', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='MarginCompany', to='FoodERPApp.C_Companies')),
                ('Item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ItemMarginDetails', to='FoodERPApp.M_Items')),
            ],
            options={
                'db_table': 'M_MarginMaster',
            },
        ),
        migrations.CreateModel(
            name='M_MRPMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('EffectiveDate', models.DateField()),
                ('MRP', models.DecimalField(decimal_places=2, max_digits=20)),
                ('CommonID', models.IntegerField(blank=True, null=True)),
                ('IsDeleted', models.BooleanField(default=False)),
                ('CreatedBy', models.IntegerField()),
                ('CreatedOn', models.DateTimeField(auto_now_add=True)),
                ('UpdatedBy', models.IntegerField()),
                ('UpdatedOn', models.DateTimeField(auto_now_add=True)),
                ('Company', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='MRPCompany', to='FoodERPApp.C_Companies')),
            ],
            options={
                'db_table': 'M_MRPMaster',
            },
        ),
        migrations.CreateModel(
            name='M_Pages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PageHeading', models.CharField(blank=True, max_length=500)),
                ('Name', models.CharField(max_length=100)),
                ('PageDescription', models.CharField(blank=True, max_length=500)),
                ('PageDescriptionDetails', models.CharField(blank=True, max_length=500)),
                ('isActive', models.BooleanField(default=False)),
                ('DisplayIndex', models.IntegerField()),
                ('Icon', models.CharField(max_length=100)),
                ('ActualPagePath', models.CharField(max_length=100)),
                ('IsDivisionRequired', models.BooleanField(default=False)),
                ('IsEditPopuporComponent', models.BooleanField(default=False)),
                ('PageType', models.IntegerField()),
                ('RelatedPageID', models.IntegerField()),
                ('CreatedBy', models.IntegerField()),
                ('CreatedOn', models.DateTimeField(auto_now_add=True)),
                ('UpdatedBy', models.IntegerField()),
                ('UpdatedOn', models.DateTimeField(auto_now=True)),
                ('Module', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='PagesModule', to='FoodERPApp.H_Modules')),
            ],
            options={
                'db_table': 'M_Pages',
            },
        ),
        migrations.CreateModel(
            name='M_Parties',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=500)),
                ('Email', models.EmailField(max_length=200)),
                ('MobileNo', models.BigIntegerField()),
                ('AlternateContactNo', models.CharField(blank=True, max_length=500, null=True)),
                ('Taluka', models.IntegerField()),
                ('City', models.IntegerField()),
                ('GSTIN', models.CharField(max_length=500)),
                ('PAN', models.CharField(max_length=500)),
                ('IsDivision', models.BooleanField(default=False)),
                ('MkUpMkDn', models.BooleanField(default=False)),
                ('isActive', models.BooleanField(default=False)),
                ('CreatedBy', models.IntegerField()),
                ('CreatedOn', models.DateTimeField(auto_now_add=True)),
                ('UpdatedBy', models.IntegerField()),
                ('UpdatedOn', models.DateTimeField(auto_now=True)),
                ('Company', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='PartiesCompany', to='FoodERPApp.C_Companies')),
                ('District', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='PartiesDistrict', to='FoodERPApp.M_Districts')),
            ],
            options={
                'db_table': 'M_Parties',
            },
        ),
        migrations.CreateModel(
            name='M_PartyType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100)),
                ('IsSCM', models.BooleanField(default=False)),
                ('IsDivision', models.BooleanField(default=False)),
                ('CreatedBy', models.IntegerField()),
                ('CreatedOn', models.DateTimeField(auto_now_add=True)),
                ('UpdatedBy', models.IntegerField()),
                ('UpdatedOn', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'M_PartyType',
            },
        ),
        migrations.CreateModel(
            name='M_RoleAccess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreatedBy', models.IntegerField()),
                ('CreatedOn', models.DateTimeField(auto_now_add=True)),
                ('UpdatedBy', models.IntegerField()),
                ('UpdatedOn', models.DateTimeField(auto_now=True)),
                ('Company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='RoleAccessCompany', to='FoodERPApp.C_Companies')),
                ('Division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='RoleAccessDividion', to='FoodERPApp.M_Parties')),
                ('Modules', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='RoleAccessModules', to='FoodERPApp.H_Modules')),
                ('Pages', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='RoleAccessPages', to='FoodERPApp.M_Pages')),
            ],
            options={
                'db_table': 'M_RoleAccess',
            },
        ),
        migrations.CreateModel(
            name='M_Roles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100)),
                ('Description', models.CharField(max_length=100)),
                ('isActive', models.BooleanField(default=False)),
                ('isSCMRole', models.BooleanField(default=False)),
                ('IsPartyConnection', models.BooleanField(default=False)),
                ('Dashboard', models.CharField(max_length=200)),
                ('CreatedBy', models.IntegerField()),
                ('CreatedOn', models.DateTimeField(auto_now_add=True)),
                ('UpdatedBy', models.IntegerField()),
                ('UpdatedOn', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'M_Roles',
            },
        ),
        migrations.CreateModel(
            name='M_States',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100)),
                ('StateCode', models.CharField(max_length=100)),
                ('CreatedBy', models.IntegerField()),
                ('CreatedOn', models.DateTimeField(auto_now_add=True)),
                ('UpdatedBy', models.IntegerField()),
                ('UpdatedOn', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'M_States',
            },
        ),
        migrations.CreateModel(
            name='M_TermsAndConditions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'M_TermsAndConditions',
            },
        ),
        migrations.CreateModel(
            name='M_Units',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=500)),
                ('CreatedBy', models.IntegerField()),
                ('CreatedOn', models.DateTimeField(auto_now_add=True)),
                ('UpdatedBy', models.IntegerField()),
                ('UpdatedOn', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'M_Units',
            },
        ),
        migrations.CreateModel(
            name='M_Vehicles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('VehicleNumber', models.CharField(max_length=300)),
                ('Description', models.CharField(max_length=300)),
                ('Driver', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='DriverName', to='FoodERPApp.M_Drivers')),
            ],
            options={
                'db_table': 'M_Vehicles',
            },
        ),
        migrations.CreateModel(
            name='M_VehicleTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=300)),
            ],
            options={
                'db_table': 'M_VehicleTypes',
            },
        ),
        migrations.CreateModel(
            name='MC_ItemUnits',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('BaseUnitQuantity', models.DecimalField(decimal_places=3, max_digits=5)),
                ('IsDeleted', models.BooleanField(default=False)),
                ('Item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ItemUnitDetails', to='FoodERPApp.M_Items')),
                ('UnitID', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='UnitID', to='FoodERPApp.M_Units')),
            ],
            options={
                'db_table': 'MC_ItemUnits',
            },
        ),
        migrations.CreateModel(
            name='T_Invoices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('InvoiceDate', models.DateField()),
                ('InvoiceNumber', models.IntegerField()),
                ('FullInvoiceNumber', models.CharField(max_length=500)),
                ('CustomerGSTTin', models.CharField(max_length=500)),
                ('GrandTotal', models.DecimalField(decimal_places=2, max_digits=15)),
                ('RoundOffAmount', models.DecimalField(decimal_places=2, max_digits=5)),
                ('CreatedBy', models.IntegerField()),
                ('CreatedOn', models.DateTimeField(auto_now_add=True)),
                ('UpdatedBy', models.IntegerField()),
                ('UpdatedOn', models.DateTimeField(auto_now=True)),
                ('Customer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='InvoicesCustomer', to='FoodERPApp.M_Parties')),
            ],
            options={
                'db_table': 'T_Invoices',
            },
        ),
        migrations.CreateModel(
            name='T_Orders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('OrderDate', models.DateField()),
                ('OrderAmount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('Description', models.CharField(blank=True, max_length=500, null=True)),
                ('CreatedBy', models.IntegerField()),
                ('CreatedOn', models.DateTimeField(auto_now_add=True)),
                ('UpdatedBy', models.IntegerField()),
                ('UpdatedOn', models.DateTimeField(auto_now_add=True)),
                ('Customer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='OrderCustomer', to='FoodERPApp.M_Parties')),
                ('Supplier', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='OrderSupplier', to='FoodERPApp.M_Parties')),
            ],
            options={
                'db_table': 'T_Orders',
            },
        ),
        migrations.CreateModel(
            name='M_Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('LoginName', models.CharField(max_length=100, unique=True)),
                ('isActive', models.BooleanField(default=False)),
                ('isSendOTP', models.BooleanField(default=False)),
                ('isLoginUsingMobile', models.BooleanField(default=False)),
                ('isLoginUsingEmail', models.BooleanField(default=False)),
                ('AdminPassword', models.CharField(max_length=100)),
                ('OTP', models.CharField(max_length=1002, null=True)),
                ('CreatedBy', models.IntegerField()),
                ('CreatedOn', models.DateTimeField(auto_now_add=True)),
                ('UpdatedBy', models.IntegerField()),
                ('UpdatedOn', models.DateTimeField(auto_now=True)),
                ('Employee', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='UserEmployee', to='FoodERPApp.M_Employees')),
            ],
            options={
                'db_table': 'M_Users',
            },
        ),
        migrations.CreateModel(
            name='TC_OrderItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('Rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('BaseUnitQuantity', models.DecimalField(decimal_places=3, max_digits=5)),
                ('BasicAmount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('GSTAmount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('Amount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('CGST', models.DecimalField(decimal_places=2, max_digits=20)),
                ('SGST', models.DecimalField(decimal_places=2, max_digits=20)),
                ('IGST', models.DecimalField(decimal_places=2, max_digits=20)),
                ('CGSTPercentage', models.DecimalField(decimal_places=2, max_digits=20)),
                ('SGSTPercentage', models.DecimalField(decimal_places=2, max_digits=20)),
                ('IGSTPercentage', models.DecimalField(decimal_places=2, max_digits=20)),
                ('CreatedOn', models.DateTimeField(auto_now_add=True)),
                ('GST', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='OrderItemGST', to='FoodERPApp.M_GSTHSNCode')),
                ('Item', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Items', to='FoodERPApp.M_Items')),
                ('MRP', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='OrderItemMRP', to='FoodERPApp.M_MRPMaster')),
                ('Margin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='OrderItemMargin', to='FoodERPApp.M_MarginMaster')),
                ('Order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='OrderItem', to='FoodERPApp.T_Orders')),
                ('Unit', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='OrderUnitID', to='FoodERPApp.MC_ItemUnits')),
            ],
            options={
                'db_table': 'TC_OrderItems',
            },
        ),
        migrations.CreateModel(
            name='TC_InvoiceItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('HSNCode', models.CharField(max_length=500)),
                ('Quantity', models.DecimalField(decimal_places=3, max_digits=5)),
                ('BaseUnitQuantity', models.DecimalField(decimal_places=3, max_digits=15)),
                ('QtyInKg', models.DecimalField(decimal_places=3, max_digits=10)),
                ('QtyInNo', models.DecimalField(decimal_places=3, max_digits=10)),
                ('QtyInBox', models.DecimalField(decimal_places=3, max_digits=10)),
                ('MRP', models.DecimalField(decimal_places=2, max_digits=15)),
                ('Rate', models.DecimalField(decimal_places=2, max_digits=15)),
                ('BasicAmount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('TaxType', models.CharField(max_length=500)),
                ('GSTPercentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('GSTAmount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('Amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('DiscountType', models.CharField(max_length=500)),
                ('Discount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('DiscountAmount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('CGST', models.DecimalField(decimal_places=2, max_digits=5)),
                ('SGST', models.DecimalField(decimal_places=2, max_digits=5)),
                ('IGST', models.DecimalField(decimal_places=2, max_digits=5)),
                ('CGSTPercentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('SGSTPercentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('IGSTPercentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('CreatedOn', models.DateTimeField(auto_now_add=True)),
                ('Invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='InvoiceItems', to='FoodERPApp.T_Invoices')),
                ('Item', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='FoodERPApp.M_Items')),
                ('Unit', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='InvoiceUnitID', to='FoodERPApp.MC_ItemUnits')),
            ],
            options={
                'db_table': 'TC_InvoiceItems',
            },
        ),
        migrations.CreateModel(
            name='TC_InvoiceItemBatches',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('BatchDate', models.DateField(blank=True, null=True)),
                ('BatchCode', models.CharField(max_length=500)),
                ('Quantity', models.DecimalField(decimal_places=3, max_digits=5)),
                ('MRP', models.DecimalField(decimal_places=2, max_digits=15)),
                ('CreatedOn', models.DateTimeField(auto_now_add=True)),
                ('Invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='FoodERPApp.T_Invoices')),
                ('InvoiceItem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='InvoiceItemBatches', to='FoodERPApp.TC_InvoiceItems')),
                ('Item', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='FoodERPApp.M_Items')),
                ('Unit', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='InvoiceBatchUnitID', to='FoodERPApp.MC_ItemUnits')),
            ],
            options={
                'db_table': 'TC_InvoiceItemBatches',
            },
        ),
        migrations.AddField(
            model_name='t_invoices',
            name='Order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='FoodERPApp.T_Orders'),
        ),
        migrations.AddField(
            model_name='t_invoices',
            name='Party',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='InvoicesParty', to='FoodERPApp.M_Parties'),
        ),
        migrations.CreateModel(
            name='MC_VehiclesDivisions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Division', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='VDivision', to='FoodERPApp.M_Parties')),
                ('Vehicle', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='VehicleDivisions', to='FoodERPApp.M_Vehicles')),
            ],
            options={
                'db_table': 'MC_VehiclesDivisions',
            },
        ),
        migrations.CreateModel(
            name='MC_UserRoles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Party', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='userparty', to='FoodERPApp.M_Parties')),
                ('Role', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Role', to='FoodERPApp.M_Roles')),
                ('User', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='UserRole', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'MC_UserRoles',
            },
        ),
        migrations.CreateModel(
            name='MC_SubGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=500)),
                ('CreatedBy', models.IntegerField(default=False)),
                ('CreatedOn', models.DateTimeField(auto_now_add=True)),
                ('UpdatedBy', models.IntegerField(default=False)),
                ('UpdatedOn', models.DateTimeField(auto_now_add=True)),
                ('Group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Group', to='FoodERPApp.M_Group')),
            ],
            options={
                'db_table': 'MC_SubGroup',
            },
        ),
        migrations.CreateModel(
            name='MC_RolesEmployeeTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('EmployeeType', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='FoodERPApp.M_EmployeeTypes')),
                ('Role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='RoleEmployeeTypes', to='FoodERPApp.M_Roles')),
            ],
            options={
                'db_table': 'MC_RolesEmployeeTypes',
            },
        ),
        migrations.CreateModel(
            name='MC_RolePageAccess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PageAccess', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='RolePageAccess', to='FoodERPApp.H_PageAccess')),
                ('RoleAccess', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='RoleAccess', to='FoodERPApp.M_RoleAccess')),
            ],
            options={
                'db_table': 'MC_RolePageAccess',
            },
        ),
        migrations.CreateModel(
            name='MC_PartySubParty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreatedBy', models.IntegerField(blank=True, null=True)),
                ('CreatedOn', models.DateTimeField(auto_now_add=True)),
                ('UpdatedBy', models.IntegerField(blank=True, null=True)),
                ('UpdatedOn', models.DateTimeField(auto_now=True)),
                ('Party', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='MCParty', to='FoodERPApp.M_Parties')),
                ('SubParty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='MCSubParty', to='FoodERPApp.M_Parties')),
            ],
            options={
                'db_table': 'MC_PartySubParty',
            },
        ),
        migrations.CreateModel(
            name='MC_PartyItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Item', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='PartyItem', to='FoodERPApp.M_Items')),
                ('Party', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Party', to='FoodERPApp.M_Parties')),
            ],
            options={
                'db_table': 'MC_PartyItems',
            },
        ),
        migrations.CreateModel(
            name='MC_PartyAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Address', models.CharField(max_length=500)),
                ('FSSAINo', models.CharField(max_length=500)),
                ('FSSAIExipry', models.DateField(blank=True)),
                ('PIN', models.CharField(max_length=500)),
                ('IsDefault', models.BooleanField(default=False)),
                ('AddressType', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='AddressType', to='FoodERPApp.M_AddressTypes')),
                ('Party', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PartyAddress', to='FoodERPApp.M_Parties')),
            ],
            options={
                'db_table': 'MC_PartyAddress',
            },
        ),
        migrations.CreateModel(
            name='MC_PagePageAccess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Access', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='FoodERPApp.H_PageAccess')),
                ('Page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PagePageAccess', to='FoodERPApp.M_Pages')),
            ],
            options={
                'db_table': 'MC_PagePageAccess',
            },
        ),
        migrations.CreateModel(
            name='MC_PageFieldMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ControlID', models.CharField(max_length=300)),
                ('FieldLabel', models.CharField(max_length=300)),
                ('DefaultSort', models.IntegerField()),
                ('IsCompulsory', models.BooleanField(default=False)),
                ('ListPageSeq', models.IntegerField()),
                ('ShowInListPage', models.BooleanField(default=False)),
                ('ShowInDownload', models.BooleanField(default=False)),
                ('DownloadDefaultSelect', models.BooleanField(default=False)),
                ('InValidMsg', models.CharField(max_length=300)),
                ('ControlType', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='ControlType', to='FoodERPApp.M_ControlTypeMaster')),
                ('FieldValidation', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='FieldValidation', to='FoodERPApp.M_FieldValidations')),
                ('Page', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PageFieldMaster', to='FoodERPApp.M_Pages')),
            ],
            options={
                'db_table': 'MC_PageFieldMaster',
            },
        ),
        migrations.CreateModel(
            name='MC_ItemImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Item_pic', models.TextField()),
                ('ImageType', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='ImageType', to='FoodERPApp.M_ImageTypes')),
                ('Item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ItemImagesDetails', to='FoodERPApp.M_Items')),
            ],
            options={
                'db_table': 'MC_ItemImages',
            },
        ),
        migrations.CreateModel(
            name='MC_ItemGroupDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreatedOn', models.DateTimeField(auto_now_add=True)),
                ('UpdatedOn', models.DateTimeField(auto_now_add=True)),
                ('Group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='ItemGroup', to='FoodERPApp.M_Group')),
                ('GroupType', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='ItemGroupType', to='FoodERPApp.M_GroupType')),
                ('Item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ItemGroupDetails', to='FoodERPApp.M_Items')),
                ('SubGroup', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='ItemSubGroup', to='FoodERPApp.MC_SubGroup')),
            ],
            options={
                'db_table': 'MC_ItemGroupDetails',
            },
        ),
        migrations.CreateModel(
            name='MC_ItemDivisions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Division', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Division', to='FoodERPApp.M_Parties')),
                ('Item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ItemDivisionDetails', to='FoodERPApp.M_Items')),
            ],
            options={
                'db_table': 'MC_ItemDivisions',
            },
        ),
        migrations.CreateModel(
            name='MC_ItemCategoryDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CreatedOn', models.DateTimeField(auto_now_add=True)),
                ('UpdatedOn', models.DateTimeField(auto_now_add=True)),
                ('Category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='ItemCategory', to='FoodERPApp.M_Category')),
                ('CategoryType', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='ItemCategoryType', to='FoodERPApp.M_CategoryType')),
                ('Item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ItemCategoryDetails', to='FoodERPApp.M_Items')),
            ],
            options={
                'db_table': 'MC_ItemCategoryDetails',
            },
        ),
        migrations.CreateModel(
            name='MC_EmployeeParties',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='EmployeeParties', to='FoodERPApp.M_Employees')),
                ('Party', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='Employeeparty', to='FoodERPApp.M_Parties')),
            ],
            options={
                'db_table': 'MC_EmployeeParties',
            },
        ),
        migrations.AddField(
            model_name='m_vehicles',
            name='VehicleType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='VehicleType', to='FoodERPApp.M_VehicleTypes'),
        ),
        migrations.AddField(
            model_name='m_roleaccess',
            name='Role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='RoleAccessRole', to='FoodERPApp.M_Roles'),
        ),
        migrations.CreateModel(
            name='M_PriceList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100)),
                ('BasePriceListID', models.IntegerField()),
                ('MkUpMkDn', models.BooleanField(default=False)),
                ('CreatedBy', models.IntegerField()),
                ('CreatedOn', models.DateTimeField(auto_now_add=True)),
                ('UpdatedBy', models.IntegerField()),
                ('UpdatedOn', models.DateTimeField(auto_now=True)),
                ('Company', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='PriceListCompany', to='FoodERPApp.C_Companies')),
                ('PLPartyType', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='PriceListPartyType', to='FoodERPApp.M_PartyType')),
            ],
            options={
                'db_table': 'M_PriceList',
            },
        ),
        migrations.AddField(
            model_name='m_parties',
            name='PartyType',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='PartyType', to='FoodERPApp.M_PartyType'),
        ),
        migrations.AddField(
            model_name='m_parties',
            name='PriceList',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='PartyPriceList', to='FoodERPApp.M_PriceList'),
        ),
        migrations.AddField(
            model_name='m_parties',
            name='State',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='PartiesState', to='FoodERPApp.M_States'),
        ),
        migrations.AddField(
            model_name='m_mrpmaster',
            name='Division',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='MRPDivision', to='FoodERPApp.M_Parties'),
        ),
        migrations.AddField(
            model_name='m_mrpmaster',
            name='Item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ItemMRPDetails', to='FoodERPApp.M_Items'),
        ),
        migrations.AddField(
            model_name='m_mrpmaster',
            name='Party',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='MRPParty', to='FoodERPApp.M_Parties'),
        ),
        migrations.AddField(
            model_name='m_marginmaster',
            name='Party',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='MarginParty', to='FoodERPApp.M_Parties'),
        ),
        migrations.AddField(
            model_name='m_marginmaster',
            name='PriceList',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='PriceList', to='FoodERPApp.M_PriceList'),
        ),
        migrations.AddField(
            model_name='m_items',
            name='BaseUnitID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='BaseUnitID', to='FoodERPApp.M_Units'),
        ),
        migrations.AddField(
            model_name='m_items',
            name='Company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='ItemCompany', to='FoodERPApp.C_Companies'),
        ),
        migrations.AddField(
            model_name='m_gsthsncode',
            name='Item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ItemGSTHSNDetails', to='FoodERPApp.M_Items'),
        ),
        migrations.AddField(
            model_name='m_group',
            name='GroupType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='GroupType', to='FoodERPApp.M_GroupType'),
        ),
        migrations.AddField(
            model_name='m_employees',
            name='EmployeeType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='EmployeeType', to='FoodERPApp.M_EmployeeTypes'),
        ),
        migrations.AddField(
            model_name='m_employees',
            name='State',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='EmployeesState', to='FoodERPApp.M_States'),
        ),
        migrations.AddField(
            model_name='m_districts',
            name='State',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='DistrictState', to='FoodERPApp.M_States'),
        ),
        migrations.AddField(
            model_name='m_category',
            name='CategoryType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='CategoryType', to='FoodERPApp.M_CategoryType'),
        ),
        migrations.AddField(
            model_name='c_companies',
            name='CompanyGroup',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='CompanyGroup', to='FoodERPApp.C_CompanyGroups'),
        ),
    ]
